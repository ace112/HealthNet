from django.shortcuts import render
from django.shortcuts import redirect
from django.views.generic.list import ListView
from django.views.generic import TemplateView
from django.views.generic import CreateView, DeleteView
from django.contrib.auth.mixins import LoginRequiredMixin
from .models import Inbox
from .forms import MessageForm, ReplyForm
from core.models import User
from django.core.urlresolvers import reverse_lazy
# Create your views here.


class InboxView(LoginRequiredMixin, ListView):
    model = Inbox
    template_name = 'inbox.html'

    def get_context_data(self, **kwargs):
        self.request.user.unread = 0
        self.request.user.save()
        pk = self.kwargs['pk']
        context = super(InboxView, self).get_context_data(**kwargs)
        context['messages'] = Inbox.objects.filter(receiver=pk)
        return context


class ReplyMessageView(CreateView):
    model = Inbox
    form_class = ReplyForm
    template_name = 'replymessage.html'
    success_url = '/dashboard'  # TODO: improve this

    def form_valid(self, form):
        user = User.objects.get(pk=form.cleaned_data['receiver'].id)
        user.unread += 1
        user.save()
        return super(ReplyMessageView, self).form_valid(form)

    def get_form_kwargs(self):
        kwargs = super().get_form_kwargs()
        kwargs.update(user=self.request.user)
        kwargs.update(receiver=self.kwargs.get('pk'))

        return kwargs

    def get_success_url(self):
        return reverse_lazy('inbox', args=[self.request.user.id])


class SendMessageView(CreateView):
    model = Inbox
    model2 = User
    form_class = MessageForm
    template_name = 'sendmessage.html'
    success_url = '/dashboard'  # TODO: improve this

    def form_valid(self, form):
        user = User.objects.get(pk=form.cleaned_data['receiver'].id)
        user.unread += 1
        user.save()
        return super(SendMessageView, self).form_valid(form)

    def get_success_url(self):
        return reverse_lazy('inbox', args=[self.request.user.id])

    def get_form_kwargs(self):
        kwargs = super().get_form_kwargs()
        kwargs.update(user=self.request.user)

        return kwargs


class DeleteMessageView(DeleteView):
    model = Inbox
    template_name = 'delete_message.html'

    def get_success_url(self):
        return reverse_lazy('inbox', args=[self.request.user.id])


def delete_all_messages(request):
    if request.GET.get('Confirm'):
        Inbox.objects.filter(receiver=request.user).delete()
        return redirect('inbox', request.user.id)

    return render(request, 'delete_all_messages.html')
